// <auto-generated />
using System;
using EleaguesApp.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EleaguesApp.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("EleaguesApp.API.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("Fifties")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<int>("FiveWickets")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hundreds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InningsHigh")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeagueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OpponentFifties")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OpponentFiveWickets")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OpponentGroup")
                        .HasColumnType("TEXT");

                    b.Property<int>("OpponentHundreds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OpponentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OpponentInningsHigh")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("OpponentOvers")
                        .HasColumnType("TEXT");

                    b.Property<int>("OpponentRuns")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OpponentWickets")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Overs")
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.Property<int>("Round")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Runs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Stage")
                        .HasColumnType("TEXT");

                    b.Property<int>("Wickets")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WinnerGroup")
                        .HasColumnType("TEXT");

                    b.Property<int>("WinnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("OpponentId");

                    b.HasIndex("WinnerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("EleaguesApp.API.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Difficulty")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Format")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefaultLeague")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsGroupLeague")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LostPoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MatchTiming")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizeSkills")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParticipationPoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PitchSettings")
                        .HasColumnType("TEXT");

                    b.Property<string>("Powerplay")
                        .HasColumnType("TEXT");

                    b.Property<string>("RopeSettings")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rounds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RulesFileName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeamFormat")
                        .HasColumnType("TEXT");

                    b.Property<int>("WinPoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Winner")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("EleaguesApp.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KnownAs")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobile")
                        .HasColumnType("TEXT");

                    b.Property<string>("PSN")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EleaguesApp.API.Models.Game", b =>
                {
                    b.HasOne("EleaguesApp.API.Models.League", "League")
                        .WithMany("Games")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EleaguesApp.API.Models.User", "Opponent")
                        .WithMany("Opponents")
                        .HasForeignKey("OpponentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EleaguesApp.API.Models.User", "Winner")
                        .WithMany("Winners")
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
